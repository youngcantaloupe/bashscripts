#!/usr/bin/env bash

# -----------------------------------------------------------------------------
# Script: setaudio
# Description:
# Author: kakashi
# Created: 2025-04-04
# -----------------------------------------------------------------------------


# ─── Colors ──────────────────────────────────────────────────────
RED="\033[31m"
YELLOW="\033[33m"
GREEN="\033[32m"
BLUE="\033[34m"
RESET="\033[0m"

log()   { echo -e "${GREEN}[INFO]${RESET}  $*" >&2; }
warn()  { echo -e "${YELLOW}[WARN]${RESET}  $*" >&2; }
error() { echo -e "${RED}[ERROR]${RESET} $*" >&2; }
die()   { error "$*"; exit 1; }


# ─── Rofi Theme ────────────────────────────────────────────────
THEME="$HOME/.config/rofi/combined.rasi"


gum style \
    --foreground 15 --border-foreground 212 \
    --align left --width 50 --margin "1 2" --padding "0 0" \
    '
    ___             ___
   /   | __  ______/ (_)___
  / /| |/ / / / __  / / __ \
 / ___ / /_/ / /_/ / / /_/ /
/_/  |_\__,_/\__,_/_/\____/
'

SINKS=$(wpctl status | awk '/Sinks:/{flag=1; next} flag && /Sink endpoints:/{flag=0} flag')

sinkInfo=()
while IFS= read -r line; do
    cleanLine=$(sed 's/^[^0-9]*//' <<< "$line" | sed 's/^[ \t]*//;s/[ \t]*$//')
    if [ -z "$cleanLine" ]; then
        break
    fi

    number=$(awk '{print $1}' <<< "$cleanLine")
    name=$(awk -F '[[]' '{print $1}' <<< "$cleanLine" | cut -d' ' -f2-)
    volume=$(awk -F '\\[vol: ' '{print $2}' <<< "$line" | tr -d '[]')

    sinkInfo+=("$number | $name | $volume")
done <<< "$SINKS"

selection=$(gum choose --height 8 "${sinkInfo[@]}" --header "Select Audio:")
if [ -z "$selection" ]; then
    die "DuMB sHIt enDEd ME"
fi

sink=$(echo $selection | awk '{print $1}' | sed 's/\.//')


wpctl set-default "$sink"
log "Set audio sink: "$sink

# Print or process
# for sink in "${sinkInfo[@]}"; do
#     log $sink
# done







# SINKS=$(wpctl status | awk '/Sinks:/{flag=1; next} flag && /Sink endpoints:/{flag=0} flag && !/^[[:space:]]*│[[:space:]]*$/')
#
# deviceNames=()
# while IFS= read -r line; do
#     deviceNames+=("$(awk -F '\\[vol:' '{gsub(/^ +| +$/, "", $1); print $1}' <<< "$line")")
# done <<< "$SINKS"
#
# log "\ndevice names: " $deviceNames
# log "\nName: "$deviceName
#
# #selection=$(gum choose --height 8 "${deviceNames[@]}" --header "Select Device:")
#
#
#
#
# # deviceNames=()
# # while IFS= read -r line; do
# #     deviceName=$(echo "$line" | sed 's/\[vol:.*//')
# #     deviceNames+=("$(echo "$deviceName" | sed 's/^[[:space:]]*//;s/[[:space:]]*$//')")
# # done <<< "$sinks"
